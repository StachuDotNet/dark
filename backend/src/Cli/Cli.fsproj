<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>8.0</LangVersion>
    <!-- Publishing configuration -->
    <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>

    <!-- We publish these for lots of different runtimes, so leave these empty and
         then specify them in scripts/build/build-release-cli-exes.sh. The
         regular build works fine with the defaults (and will pick a runtime
         automatically) -->
    <!-- <PublishTrimmed>true</PublishTrimmed> -->
    <!-- <PublishSingleFile>true</PublishSingleFile> -->
    <!-- <PublishReadyToRun>false</PublishReadyToRun> -->
    <!-- <SelfContained>true</SelfContained> -->
  </PropertyGroup>
  <!--
    +++++++++++++++++++++++++++
    This creates build-time values that we use to make version info
    +++++++++++++++++++++++++++
  -->
  <!-- Creates a GitHash property -->
  <Target Name="GitHash" BeforeTargets="AddCliAssemblyMetadata">
    <Exec Command="git describe --long --always --dirty --exclude=* --abbrev=8" ConsoleToMSBuild="True" IgnoreExitCode="False">
      <Output PropertyName="GitHash" TaskParameter="ConsoleOutput" />
    </Exec>
  </Target>
  <!-- Creates a BuildDate property -->
  <Target Name="BuildDate" BeforeTargets="AddCliAssemblyMetadata">
    <Exec Command="date" ConsoleToMSBuild="True" IgnoreExitCode="False">
      <Output PropertyName="BuildDate" TaskParameter="ConsoleOutput" />
    </Exec>
  </Target>
  <!-- Creates AssemblyMetadataAttributes which can be used via
       `System.Reflection.Assembly.GetEntryAssembly.GetCustomAttributes<
          System.Reflection.AssemblyMetadataAttribute>()` -->
  <Target Name="AddCliAssemblyMetadata" BeforeTargets="CoreGenerateAssemblyInfo">
    <ItemGroup>
      <AssemblyAttribute Include="AssemblyMetadata">
        <_Parameter1>$(BuildDate)</_Parameter1>
        <_Parameter2>$(GitHash)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>
  <ItemGroup>
    <None Include="paket.references" />
  </ItemGroup>
  <Target Name="PrintRuntimeIdentifierCli" BeforeTargets="BeforeBuild">
    <Message Importance="high" Text="RuntimeIdentifier in Cli is '$(RuntimeIdentifier)'" />
  </Target>
  <ItemGroup>
    <ProjectReference Include="../LibExecution/LibExecution.fsproj" />
    <ProjectReference Include="../DvalReprDeveloper/DvalReprDeveloper.fsproj" />
    <ProjectReference Include="../LibPackageManager/LibPackageManager.fsproj" />
    <ProjectReference Include="../BuiltinCliHost/BuiltinCliHost.fsproj" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Cli.fs" />
  </ItemGroup>

  <PropertyGroup>
    <RuntimeIdentifiers>linux-x64;linux-musl-x64;linux-arm64;linux-arm;osx-x64;osx-arm64;win-x64;win-arm64</RuntimeIdentifiers>
  </PropertyGroup>
  <Target Name="PrintRuntimeIdentifier" BeforeTargets="CoreCompile">
    <Message Importance="high" Text="RuntimeIdentifier is '$(RuntimeIdentifier)'" />
  </Target>
  <!-- default, based on our devcontainer's setup -->
  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-x64'">
    <EmbeddedResource Include="lib/sqlite3-linux-x64.so" LogicalName="tree-sitter.so" />
  </ItemGroup>
  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-musl-x64'">
    <EmbeddedResource Include="lib/sqlite3-linux-musl-x64.so" LogicalName="tree-sitter.so" />
  </ItemGroup>
  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-arm64'">
    <EmbeddedResource Include="lib/sqlite3-linux-arm64.so" LogicalName="tree-sitter.so" />
  </ItemGroup>
  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-arm'">
    <EmbeddedResource Include="lib/sqlite3-linux-arm.so" LogicalName="tree-sitter.so" />
  </ItemGroup>
  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'osx-x64'">
    <EmbeddedResource Include="lib/sqlite3-macos-x64.dylib" LogicalName="tree-sitter.dylib" />
  </ItemGroup>
  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'osx-arm64'">
    <EmbeddedResource Include="lib/sqlite3-macos-arm64.dylib" LogicalName="tree-sitter.dylib" />
  </ItemGroup>

  <Import Project="..\..\.paket\Paket.Restore.targets" />
</Project>