#!/usr/bin/env bash
. ./scripts/devcontainer/_assert-in-container "$0" "$@"

set -euo pipefail

PUBLISHED=false
FLAGS=""

for i in "$@"
do
  case "${i}" in
    --published) shift; PUBLISHED=true ;;
    --flags=*) FLAGS="${i#*=}" ;;
  esac
done

if [[ -n "$FLAGS" ]]; then
  echo "Flags: $FLAGS"
fi

LOGS="${DARK_CONFIG_RUNDIR}/logs"
CLI_LOG="$LOGS/cli.log"

if [[ "$PUBLISHED" == "true" ]]; then
  EXE="backend/Build/out/Cli/Release/net8.0/linux-x64/publish/Cli"
else
  EXE="backend/Build/out/Cli/Debug/net8.0/Cli"
fi

# if it hasn't been compiled yet, wait for it

for ((i=1;i<=1000;i++));
do
  if [[ ! -f "${EXE}" ]]; then
    echo "Waiting for compiled binary"
    sleep 0.01
  fi
done

# 'tee' was screwing up our MCP server running through this script
# "${EXE}" "$@" 2>&1 | tee "${CLI_LOG}"
# CLEANUP It'd be great to come up with a solution that allos us to still log to that cli.log file.
"${EXE}" "$@"
