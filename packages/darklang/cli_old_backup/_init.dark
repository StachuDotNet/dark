module Darklang =
  module Cli =
    let init (args: List<String>): (State * List<Msg>) =
      let interactionMode, msgs =
        match args with
        | [] ->
          (InteractionMode.Regular, [ Msg.SubmitCommand "help" ])
        | _ ->
          let cmd = (args |> Stdlib.String.join " ")
          (InteractionMode.NonInteractive, [ Msg.SubmitCommand cmd ])

      let state =
        State
          { currentPage = Page.Root
            pageHistory = []
            mainPrompt = ""
            cursorPosition = 0L
            commandHistory = []
            historyPosition = -1L
            draftPrompt = ""
            commandResult = CommandResult.None
            interactionMode = interactionMode
            needsFullRedraw = true
            isExiting = false
            completionState = Stdlib.Option.Option.None
            viewingState = Stdlib.Option.Option.None }

      // Return initial state and any initial messages to process
      (state, msgs)
