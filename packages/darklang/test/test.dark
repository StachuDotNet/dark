// Should match testfiles/execution/languages.tests -> UserDefined
module Darklang =
  module Test =
    let stringFn (key: String) : String = key ++ " appended string"

    let fnWithTypeArgAndOneParam<'a> (arg: 'a) : 'a = Json.parse<'a> arg

    let twoStringFn (str1: String) (str2: String) : String =
      str1 ++ " appended " ++ str2

    let returnsInt () : Int = 5

    let returnsString () : String = "string"

    let returnsOptionJust () : PACKAGE.Darklang.Stdlib.Option.Option<Int> = PACKAGE.Darklang.Stdlib.Option.Option.Just 5

    let returnsOptionNothing () : PACKAGE.Darklang.Stdlib.Option.Option<'a> = PACKAGE.Darklang.Stdlib.Option.Option.Nothing

    let returnsResultOk () : PACKAGE.Darklang.Stdlib.Result.Result<Int, String> =
      PACKAGE.Darklang.Stdlib.Result.Result.Ok 5

    let returnsResultError () : PACKAGE.Darklang.Stdlib.Result.Result<Char, Bool> =
      PACKAGE.Darklang.Stdlib.Result.Result.Error false

    let throwsException () : DateTime =
      Test.raiseException "throwsException message"

    let derrorFn (msg: String) : String = msg ++ Test.typeError_v0 msg