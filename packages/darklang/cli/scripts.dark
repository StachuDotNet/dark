module Darklang =
  module Cli =
    module Scripts =
      // Shared scripts utilities used by both CLI implementations
      
      type Script = {
        id: String
        name: String
        text: String
      }

      /// Lists all scripts
      let list (): Stdlib.Result.Result<List<Script>, String> =
        Stdlib.Result.Result.Ok (Builtin.cliScriptsList ())

      /// Gets a script by name
      let get (name: String): Stdlib.Result.Result<Script, String> =
        match Builtin.cliScriptsGet name with
        | Some script -> Stdlib.Result.Result.Ok script
        | None -> Stdlib.Result.Result.Error $"Script '{name}' not found"

      /// Adds a new script to the database
      let add (name: String) (text: String): Stdlib.Result.Result<Script, String> =
        Builtin.cliScriptsAdd name text

      /// Updates an existing script's text
      let update (name: String) (text: String): Stdlib.Result.Result<Unit, String> =
        Builtin.cliScriptsUpdate name text

      /// Deletes a script by name
      let delete (name: String): Stdlib.Result.Result<Unit, String> =
        Builtin.cliScriptsDelete name