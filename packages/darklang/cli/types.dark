module Darklang =
  module Cli =
    module Types =
      // aka. Url
      type Page =
        | Root
        | Module of owner: String * submodulePath: List<String>
        | Type of name: LanguageTools.ProgramTypes.PackageType.Name
        | Fn of name: LanguageTools.ProgramTypes.PackageFn.Name
        | Constant of name: LanguageTools.ProgramTypes.PackageConstant.Name

        // Canvas-specific toplevels
        // CLEANUP these probably need some tidying prior to merge
        | HandlersListing
        | DBsListing
        | SecretsListing
        | Handler of tlid: String
        | DB of name: String
        | Secret of name: String

      /// The result of a command execution
      type CommandResult =
        | None
        | Success of message: String
        | Info of message: String
        | Error of message: String

      /// The CLI interaction mode
      type InteractionMode =
        | NonInteractive
        | RefreshScreen
        | Regular

      /// The state of completion
      type CompletionState =
        { /// Current completion suggestions
          suggestions: List<String>
          /// Index of currently selected suggestion (-1 = no selection)
          selectedIndex: Int64
          /// The original text that was being completed
          originalText: String
          /// The prefix that matched to generate these suggestions
          completionPrefix: String
        }

      type State =
        {  // -- routing, current status --
          /// The current page/view the user is on
          currentPage: Page

          /// History of pages for navigation (most recent at the head)
          pageHistory: List<Page>


          // -- prompt, results --
          /// What we were typing before we started navigating history
          draftPrompt: String

          /// The current input in the prompt
          mainPrompt: String

          /// Command history
          commandHistory: List<String>

          /// The current state of tab completion
          completionState: Stdlib.Option.Option<CompletionState>

          /// The result of the last command's execution
          commandResult: CommandResult


          // -- cursor position
          /// Position of the cursor within the prompt
          cursorPosition: Int64

          /// Current position in command history (-1 = typing (not navigating), 0 = most recent, 1 = second most recent, etc.)
          historyPosition: Int64


          // -- meta, settings --
          /// The current interaction mode
          interactionMode: InteractionMode

          /// Flag to indicate if a full screen redraw is needed
          /// Set to true for initial render, after command execution, or navigation
          needsFullRedraw: Bool

          /// Flag to indicate if the application should exit
          isExiting: Bool
        }