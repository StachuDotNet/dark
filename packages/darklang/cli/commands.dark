module Darklang =
  module Cli =
    module Commands =
      let parseAndExecute (state: AppState) (input: String) : AppState =
        let trimmed = Stdlib.String.trim input
        let parts = Stdlib.String.split trimmed " "
        match parts with
        | [] -> state
        | commandName :: args ->
          Registry.executeCommand commandName state args

      // Clear command - clear the screen
      let executeClear (state: AppState) (args: List<String>) : AppState =
        Builtin.stdoutClear ()
        { state with lastCommand = "clear"; output = "screen cleared"; needsFullRedraw = true }

      let clearHelp (state: AppState) : AppState =
        Builtin.printLine "Usage: clear"
        Builtin.printLine "Clear the terminal screen."
        Builtin.printLine ""
        Builtin.printLine "Aliases: cls"
        { state with lastCommand = "help clear"; output = "clear help displayed" }

      let clearComplete (state: AppState) (args: List<String>) : List<String> =
        Completion.noArgsCompletion state args

