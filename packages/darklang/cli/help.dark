module Darklang =
  module Cli =
    module Help =
      let execute (state: AppState) (args: List<String>) : AppState =
        match args with
        | [] ->
          Builtin.printLine (Registry.getCommandList ())
          updateCoreFields state state.isExiting "help" "help displayed" state.mainPrompt state.needsFullRedraw
        | [commandName] ->
          Registry.executeCommandHelp commandName state
        | _ ->
          Builtin.printLine (Colors.error "Usage: help [command]")
          Builtin.printLine "Too many arguments. Use 'help' for general help or 'help <command>' for specific help."
          updateCoreFields state state.isExiting "help error" "help error" state.mainPrompt state.needsFullRedraw

      let help (state: AppState) : AppState =
        Builtin.printLine (Colors.info "Usage: " ++ Colors.command "help [command]")
        Builtin.printLine "Show general help or help for a specific command."
        Builtin.printLine ""
        Builtin.printLine (Colors.info "Examples:")
        Builtin.printLine ("  " ++ Colors.command "help" ++ "        - Show all available commands")
        Builtin.printLine ("  " ++ Colors.command "help quit" ++ "   - Show help for the quit command")
        updateCoreFields state state.isExiting "help help" "help help displayed" state.mainPrompt state.needsFullRedraw

      let complete (state: AppState) (args: List<String>) : List<String> =
        Completion.commandNamesCompletion state args

// CLEANUP I think there's other `help` stuff we can move here
// specifically, the commandNamesCompletino