state machine of smartgpt

type Prompt = | Prompt of String

// type PromptConversationStep = ...
module Prompt =
  let stepByStep (): Prompt =
    Prompt "Let's work this out in a step-by-step way to be sure we have the right answer:"




let handleUserPrompt (userPrompt: Prompt)=
  //use this secret prompt sequence (from smartgpt)

  let initialPrompt (userPrompt: Prompt): String =
    """
    Question:
    <userPrompt>

    Answer:
    ${Prompt.stepByStep()}
    """

  let aFew = List.repeat 3 |> List.map (fun _ -> OpenAI.something initialPrompt)

  let investigatorPrompt (userPrompt: Prompt) (answerPrompts: List<Prompt>): Prompt =
    """Question: ${userPrompt}
    ${
      answerPrompts
      |> List.mapi(fun i p -> "Answer Option ${i}\n{p}")
      |> String.concat "\n\n"
    }

    You are a researcher tasked with investigating the ${List.length answerPrompts} response options provided.
    List the flaws and faulty logic of each answer option.
    ${Prompt.stepByStep()}"""

  let resolverPrompt (answerCount: Int): Prompt=
    """You are a resolver tasked with
    1) finding which of the ${answerCount} answer options the researcher thought was best
    2) improving that answer, and
    3) printing the improved answer in full
    ${Prompt.stepByStep()}"""

  //
  do this 3x, to get 3 samples of outputs

  OpenAI.something then,
